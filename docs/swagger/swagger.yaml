basePath: /api/v1
definitions:
  rest.ConflictError:
    properties:
      error:
        example: account already exists
        type: string
    type: object
  rest.Error:
    properties:
      details:
        items:
          $ref: '#/definitions/rest.ErrorDetail'
        type: array
      error:
        example: invalid request body
        type: string
    type: object
  rest.ErrorDetail:
    properties:
      location:
        example: body.name
        type: string
      message:
        example: missing parameter
        type: string
    type: object
  rest.InternalServerError:
    properties:
      error:
        example: internal server error
        type: string
    type: object
  rest.InvalidCredentialsError:
    properties:
      error:
        example: invalid credentials
        type: string
    type: object
  rest.NotFoundError:
    properties:
      error:
        example: account not found
        type: string
    type: object
  rest.UnauthorizedError:
    properties:
      error:
        example: unauthorized
        type: string
    type: object
  schema.Account:
    properties:
      balance:
        type: integer
      cpf:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  schema.BalanceResponse:
    properties:
      balance:
        type: integer
    type: object
  schema.CreateAccountInput:
    properties:
      cpf:
        type: string
      name:
        type: string
      secret:
        type: string
    type: object
  schema.CreateAccountResponse:
    properties:
      balance:
        type: integer
      cpf:
        type: string
      created_at:
        type: string
      name:
        type: string
    type: object
  schema.ListAccountsResponse:
    properties:
      accounts:
        items:
          $ref: '#/definitions/schema.Account'
        type: array
    type: object
  schema.ListTransfersResponse:
    properties:
      transfers:
        items:
          $ref: '#/definitions/schema.Transfer'
        type: array
    type: object
  schema.LoginInput:
    properties:
      cpf:
        type: string
      secret:
        type: string
    type: object
  schema.LoginResponse:
    properties:
      token:
        type: string
    type: object
  schema.PerformTransferInput:
    properties:
      account_destination_id:
        type: string
      amount:
        type: integer
    type: object
  schema.PerformTransferResponse:
    properties:
      account_destination_id:
        type: string
      account_origin_id:
        type: string
      amount:
        type: integer
    type: object
  schema.Transfer:
    properties:
      account_destination_id:
        type: string
      account_origin_id:
        type: string
      amount:
        type: integer
      created_at:
        type: string
    type: object
info:
  contact: {}
  description: This is a simple banking api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger Banking API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: Lists all accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ListAccountsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.InternalServerError'
      summary: Lists all accounts.
      tags:
      - Accounts
    post:
      consumes:
      - application/json
      description: |-
        Creates a new account given a name, cpf and secret.
        Secret must be a minimum of 8, a maximum of 20, at least one lowercase character,
        one uppercase character and one number.
        CPF must have the format XXX.XXX.XXX-XX or XXXXXXXXXXX.
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schema.CreateAccountInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.CreateAccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/rest.ConflictError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.InternalServerError'
      summary: Creates a new account.
      tags:
      - Accounts
  /accounts/{accountID}/balance:
    get:
      consumes:
      - application/json
      description: Gets account balance by account ID, if exists.
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.BalanceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.InternalServerError'
      summary: Gets account balance.
      tags:
      - Accounts
  /login:
    post:
      consumes:
      - application/json
      description: Returns a JWT to be used on /transfers endpoints.
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schema.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.InvalidCredentialsError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.InternalServerError'
      summary: Logs in the server.
      tags:
      - Sign In
  /transfers:
    get:
      consumes:
      - application/json
      description: Lists all transfers. User must be authenticated.
      parameters:
      - description: Bearer Authorization Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ListTransfersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.UnauthorizedError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.InternalServerError'
      summary: Lists all transfers.
      tags:
      - Transfers
    post:
      consumes:
      - application/json
      description: Performs a transfer between two accounts. User must be authenticated.
      parameters:
      - description: Bearer Authorization Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schema.PerformTransferInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.PerformTransferResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.UnauthorizedError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.InternalServerError'
      summary: Performs a transfer between two accounts.
      tags:
      - Transfers
swagger: "2.0"
